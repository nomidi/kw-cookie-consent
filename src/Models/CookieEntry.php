<?php

    namespace kw\cookieconsent;

    use CheckboxField;
    use Config;
    use DataObject;
    use DB;
    use DropdownField;
    use GridField;
    use GridFieldConfig_RecordEditor;
    use RequiredFields;
    use TextField;

    class CookieEntry extends DataObject
    {
        private static $singular_name = 'CookieEntry';
        private static $table_name = 'CookieEntry';

        private static $db = array(
            'Title'=>'Varchar',
            'CookieID'=>'Varchar',
            'Provider'=>'Varchar',
            'Purpose'=>'Text',
            'Policy'=>'Varchar',
            'CookieName'=>'Varchar',
            'Time'=>'Varchar',
            'HTMLCode'=>'HTMLText',
            'HTMLCallback'=>'Varchar'
        );

        private static $has_one = array(
            'CookieCategory'=>'kw\cookieconsent\CookieCategory'
        );


        public function getCMSValidator()
        {
            return new RequiredFields(array(
                'Title','Provider','Purpose','Policy'
            ));
        }


        public static function make_entry($data, $CookieCategoryID)
        {
            $CookieEntry = CookieEntry::create();
            $CookieEntry->Title = $data['Title'];
            $CookieEntry->Provider = $data['Provider'];
            $CookieEntry->Purpose = $data['Purpose'];
            $CookieEntry->CookieName = $data['CookieName'];
            $CookieEntry->Time = $data['Time'];
            $CookieEntry->CookieCategoryID =  $CookieCategoryID;
            $CookieEntry->write();
            DB::alteration_message("Added CookieEntry ".$data['Title'], "created");
            return $CookieEntry;
        }

        public function getCMSFields()
        {
            $fields = parent::getCMSFields();
            $defaultDataArray = Config::inst()->get('kw\cookieconsent\CookieEntry', 'DefaultData');

            $fields->addFieldsToTab('Root.Main', array(
                DropdownField::create('DefaultData', _t('CookieCategory.DEFAULTDATA', "Service"),$defaultDataArray),
            ));
            $fields->addFieldToTab('Root.Code', new \LiteralField('HTMLCodeEX','<a href="https://klaro.kiprotect.com/" target="_blank">Examples</a>'));
            $fields->addFieldToTab('Root.Code', new \TextareaField('HTMLCode'));
            $fields->addFieldToTab('Root.Main', new \LiteralField('CookieID','<br>CookieID: '.$this->CookieID));
            $fields->addFieldToTab('Root.Code', new \TextField('HTMLCallback',_t('CookieSiteConfig.HTMLCallback', "Callback Funktionsname")));

            return $fields;
        }

        public function onBeforeWrite()
        {
            parent::onBeforeWrite(); // TODO: Change the autogenerated stub
            $filter = \URLSegmentFilter::create();
            $this->CookieID = $filter->filter($this->Title.'-'.$this->ID.'-'.$this->CookieName);
        }

        public function onAfterWrite()
        {
            parent::onAfterWrite(); // TODO: Change the autogenerated stub
            CookieSiteConfig::writeConfig();
        }

    }
